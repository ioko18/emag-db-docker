# .github/workflows/quick-check.yml
name: Quick Check

on:
  push:
    branches: ["**"]
  pull_request:

# nu bloca alte run-uri pe același ref; includ și numele workflow-ului
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"

jobs:
  qc:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # opțional: dacă există un .env.ci, îl folosim ca .env
      - name: Prepare .env for CI (optional)
        run: |
          if [ -f .env.ci ]; then cp .env.ci .env; fi

      # make ci se ocupă de build, up, migrări, seed, prime MVs, health, teste
      - name: Quick check
        run: make ci

      # artefacte utile la debug când ceva pică
      - name: Dump logs on failure
        if: failure()
        run: |
          docker compose ps || true
          docker compose logs --no-color > compose.log || true
          echo "---- last 200 lines of logs ----"
          tail -n 200 compose.log || true
          echo "---- disk usage ----"
          df -h || true
          echo "---- docker images ----"
          docker images || true

      # curățenie indiferent de rezultat
      - name: Teardown
        if: always()
        run: docker compose down -v --remove-orphans || true
